---

- name: configuration | import other bashrc files
  blockinfile:
    path: "{{ ansible_user_dir }}/.bashrc"
    marker: "# {mark} ANSIBLE BASH-CONFIG"
    block: |
      for i in $(ls -a ~ | grep -v .bash_aliases | grep .bashrc_)
      do
          source ~/$i
      done

- name: configuration | copy .bashrc_common
  copy:
    src: ../files/bashrc_common
    dest: "{{ ansible_user_dir }}/.bashrc_common"

- name: configuration | copy .bashrc_workon
  copy:
    src: ../files/bashrc_workon
    dest: "{{ ansible_user_dir }}/.bashrc_workon"

- name: configuration | generate opts in .bashrc_workon
  lineinfile:
    path: "{{ ansible_user_dir }}/.bashrc_workon"
    insertafter: "# @OPTS"
    line: export {{ item.name }}="{{ item.value }}"
  with_items: "{{ bashrc_workon_opts }}"

- name: configuration | generate holborn workon
  blockinfile:
    path: "{{ ansible_user_dir }}/.bashrc_workon"
    insertafter: "# @WORKON_CASE"
    marker: "# {mark} ANSIBLE BASH-CONFIG HOLBORN WORKON"
    block: |
      holborn|hlb)
          cd "{{ workspace_dir }}/private/holborn"

          export JAVA_HOME="$ORIGINAL_JAVA_HOME"
          export GRADLE_HOME="$ORIGINAL_GRADLE_HOME"
          export PATH="$ORIGINAL_PATH"

          workon_log_title

          workon_log "Holborn"  
          pwd

          workon_log "GIT"
          git --version

          workon_log "ANSIBLE"
          ansible --version

          workon_log_end
          ;;

- name: configuration | generate kilburn workon
  blockinfile:
    path: "{{ ansible_user_dir }}/.bashrc_workon"
    insertafter: "# @WORKON_CASE"
    marker: "# {mark} ANSIBLE BASH-CONFIG KILBURN WORKON"
    block: |
      kilburn|klb)
          cd "{{ workspace_dir }}/private/kilburn"

          export JAVA_HOME="$ORIGINAL_JAVA_HOME"
          export GRADLE_HOME="$ORIGINAL_GRADLE_HOME"
          export PATH="$ORIGINAL_PATH"

          workon_log_title

          workon_log "Kilburn"  
          pwd

          workon_log "GIT"
          git --version

          workon_log "JAVA"
          java -version

          workon_log "GRADLE" "$(gradle -version)"

          workon_log_end
          ;;
