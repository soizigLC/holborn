---

- name: installation | directory
  become: true
  file:
    path: "{{ workspace_dir }}/apologic/lswa"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: true


- name: installation | check if branch already installed
  stat:
    path: "{{ workspace_dir }}/apologic/lswa/{{ item.name }}"
  with_items: "{{ lswa_repo }}"
  register: branch_installed

- include: checkout.yml
  with_items: "{{ branch_installed.results }}"
  loop_control:
    loop_var: branch_item
  when: branch_item.stat.exists == false


- name: installation | clone lswa/launcher
  git:
    repo: http://git.phmd.net/lswa/launcher.git
    dest: "{{ workspace_dir }}/apologic/lswa/launcher"


- name: configuration | git author
  when: apologic_gitconfig_user_name is defined and apologic_gitconfig_user_email is defined
  blockinfile:
    dest: "{{ workspace_dir }}/apologic/lswa/launcher/.git/config"
    insertbefore: BOF
    block: |
      [user]
          name = {{ apologic_gitconfig_user_name }}
          email = {{ apologic_gitconfig_user_email }}

- name: configuration | check .bashrc_workon is present
  stat:
    path: "{{ ansible_user_dir }}/.bashrc_workon"
  register: bashrc_workon

- name: configuration | generate lswa .bashrc_workon
  when: bashrc_workon.stat.exists
  blockinfile:
    dest: "{{ ansible_user_dir }}/.bashrc_workon"
    insertafter: "# @WORKON_CASE"
    marker: "# {mark} ANSIBLE LSWA WORKON"
    block: |
      apoweb|lswa)
          cd "{{ workspace_dir }}/apologic/lswa"

          export JAVA_HOME="/opt/jdk/{{ oraclejdk_version }}"
          export GRADLE_HOME="$ORIGINAL_GRADLE_HOME"
          export ANT_HOME="/opt/netbeans/{{ netbeans_version }}/extide/ant"
          export PATH="$JAVA_HOME/bin:$ANT_HOME/bin:$ORIGINAL_PATH"

          workon_log_title

          workon_log "LSWA"  
          pwd

          workon_log "SVN"
          svn --version --quiet

          workon_log "GIT"
          git --version

          workon_log "JAVA"
          java -version

          workon_log "GRADLE" "$(gradle -version)"

          workon_log "ANT"
          ant -version

          workon_log_end
          ;;
