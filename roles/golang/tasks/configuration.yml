---

- name: configuration | check .bashrc_workon is present
  stat:
    path: "{{ ansible_user_dir }}/.bashrc_workon"
  register: bashrc_workon

- name: configuration | generate env vars in .bashrc_workon
  when:
    - bashrc_workon.stat.exists
    - golang_config_workon
  blockinfile:
    dest: "{{ ansible_user_dir }}/.bashrc_workon"
    insertafter: "# @PATHOME"
    marker: "# {mark} ANSIBLE GOLANG WORKON"
    block: |
      export GOROOT="/opt/go/{{ golang_version }}"
      export ORIGINAL_GOROOT="$GOROOT"
      export GOPATH="{{ golang_workspace_dir }}"
      export ORIGINAL_GOPATH="$GOPATH"
      export PATH="$GOROOT/bin:$GOPATH/bin:$PATH"
      
- name: configuration | generate go .bashrc_workon
  when:
    - bashrc_workon.stat.exists
    - golang_config_workon
  blockinfile:
    dest: "{{ ansible_user_dir }}/.bashrc_workon"
    insertafter: "# @WORKON_CASE"
    marker: "# {mark} ANSIBLE GOLANG WORKON"
    block: |
      golang|go)
          cd "{{ golang_workspace_dir }}"

          export GOROOT="$ORIGINAL_GOROOT"
          export GOPATH="$ORIGINAL_GOPATH"
          export PATH="$GOROOT/bin:$GOPATH/bin:$PATH"

          workon_log_title

          workon_log "Go"  
          pwd

          workon_log "GIT"
          git --version

          workon_log "Golang"
          go version

          workon_log_end
          ;;
      