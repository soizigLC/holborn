---

- name: installation | add repository
  become: true
  apt_repository:
    repo: "{{ postgresql_apt_repository }}"

- name: installation | add key
  become: true
  apt_key:
    url: "{{ postgresql_apt_key }}"   

- name: installation | update cache
  become: true
  apt:
    update_cache: yes

- name: installation | install
  become: true
  apt:
    pkg: "{{ item }}-{{ postgresql_version }}"
  with_items:
    - postgresql
    - postgresql-contrib

- name: installation | install dependencies for ansible
  become: true
  apt:
    pkg: python-psycopg2

- name: configuration | pg_hba.conf methods to trust
  become: true
  replace:
    path: /etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
    regexp: "{{ item }}"
    replace: '\1trust'
  with_items:
    - '^(local\s*all\s*postgres\s*)peer'
    - '^(local\s*all\s*all\s*)peer'

- name: configuration | restart
  become: true
  service:
    name: postgresql
    state: restarted

- name: configuration | set default password
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ postgresql_user }}"
    password: "{{ postgresql_password }}"
    role_attr_flags: SUPERUSER
    state: present

- name: configuration | powerline daemon for postgres
  become: true
  blockinfile:
    dest: /var/lib/postgresql/.bashrc
    create: true
    owner: postgres
    group: postgres
    marker: "# {mark} ANSIBLE POWERLINE"
    block: |
      powerline_info=$(pip show powerline-status | grep Location)
      if [ -n "$powerline_info" ]; then
          powerline_repo=${powerline_info#Location: }
          powerline-daemon -q
          POWERLINE_BASH_CONTINUATION=1
          POWERLINE_BASH_SELECT=1
          . ${powerline_repo}/powerline/bindings/bash/powerline.sh
      fi
